<?php

namespace App\Repository;

use App\Entity\SettingsOption;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\NonUniqueResultException;
use Doctrine\ORM\NoResultException;
use Doctrine\Persistence\ManagerRegistry;

/**
 * @extends ServiceEntityRepository<SettingsOption>
 *
 * @method SettingsOption|null find($id, $lockMode = null, $lockVersion = null)
 * @method SettingsOption|null findOneBy(array $criteria, array $orderBy = null)
 * @method SettingsOption[]    findAll()
 * @method SettingsOption[]    findBy(array $criteria, array $orderBy = null, $limit = null, $offset = null)
 */
class SettingsOptionRepository extends ServiceEntityRepository
{
    public function __construct(ManagerRegistry $registry)
    {
        parent::__construct($registry, SettingsOption::class);
    }

    public function save(SettingsOption $entity, bool $flush = false): void
    {
        $this->getEntityManager()->persist($entity);

        if ($flush) {
            $this->getEntityManager()->flush();
        }
    }

    public function remove(SettingsOption $entity, bool $flush = false): void
    {
        $this->getEntityManager()->remove($entity);

        if ($flush) {
            $this->getEntityManager()->flush();
        }
    }
    public function findAllForTwig(): array
    {
        return $this->createQueryBuilder('s', 's.name')
            ->getQuery()
            ->getResult();
    }
    public function getValue(string $name): mixed
    {
        try {
            return $this->createQueryBuilder('o')
                ->select('o.value')
                ->where('o.name = :name')
                ->setParameter('name', $name)
                ->getQuery()
                ->getSingleScalarResult();
        } catch (NoResultException|NonUniqueResultException) {
            return null;
        }
    }


    public function getValueWithLabelAndLocal(string $label, string $local="en"):?SettingsOption{

        $query = $this->createQueryBuilder('s')
            ->andwhere('s.label = :label')
            ->setParameter('label', $label);
         $option=  $query
            ->andWhere('s.lang  = :lang')->setParameter('lang',$local)
             ->setMaxResults(1)
             ->getQuery()
             ->getOneOrNullResult();
         if($option instanceof SettingsOption) return $option;
        return $query
            ->andWhere('s.lang  = :lang')->setParameter('lang',"en")
            ->setMaxResults(1)
            ->getQuery()
            ->getOneOrNullResult();


}

    public function getEntityManager():EntityManagerInterface
    {
        return parent::getEntityManager(); // TODO: Change the autogenerated stub
    }//    /**
//     * @return SettingsOption[] Returns an array of SettingsOption objects
//     */
//    public function findByExampleField($value): array
//    {
//        return $this->createQueryBuilder('s')
//            ->andWhere('s.exampleField = :val')
//            ->setParameter('val', $value)
//            ->orderBy('s.id', 'ASC')
//            ->setMaxResults(10)
//            ->getQuery()
//            ->getResult()
//        ;
//    }

//    public function findOneBySomeField($value): ?SettingsOption
//    {
//        return $this->createQueryBuilder('s')
//            ->andWhere('s.exampleField = :val')
//            ->setParameter('val', $value)
//            ->getQuery()
//            ->getOneOrNullResult()
//        ;
//    }
}
